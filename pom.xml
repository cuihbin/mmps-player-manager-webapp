<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>com.zzvc.mmps</groupId>
    <artifactId>mmps-parent</artifactId>
    <version>6-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>mmps-player-manager-webapp</artifactId>
  <version>1.2.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>mmps-player-manager-webapp</name>

  <properties>
    <mmps-core.version>1.2.0-SNAPSHOT</mmps-core.version>
    <mmps-db.version>1.2.0-SNAPSHOT</mmps-db.version>
    <mmps-player-data.version>1.2.0-SNAPSHOT</mmps-player-data.version>
  </properties>

  <scm>
    <connection>scm:git:git@github.com:cuihbin/mmps-player-manager.git</connection>
    <developerConnection>scm:git:git@github.com:cuihbin/mmps-player-manager.git</developerConnection>
    <url>https://github.com/cuihbin</url>
  </scm>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>dbunit-maven-plugin</artifactId>
        <version>1.0-beta-3</version>
        <configuration>
          <dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
          <driver>${jdbc.driverClassName}</driver>
          <username>${jdbc.username}</username>
          <password>${jdbc.password}</password>
          <url>${jdbc.url}</url>
          <src>src/test/resources/sample-data.xml</src>
          <type>${dbunit.operation.type}</type>
          <schema>${dbunit.schema}</schema>
          <skip>${skipTests}</skip>
          <transaction>true</transaction>
        </configuration>
        <executions>
          <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>operation</goal>
            </goals>
          </execution>
          <execution>
            <!-- Runs before integration tests and jetty:run-war -->
            <id>test</id>
            <phase>test</phase>
            <goals>
              <goal>operation</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>${jdbc.groupId}</groupId>
            <artifactId>${jdbc.artifactId}</artifactId>
            <version>${jdbc.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>8.1.3.v20120416</version>
        <configuration>
          <webApp>
            <contextPath>/</contextPath>
          </webApp>
        </configuration>
      </plugin>
      <!-- clean-up previous hibernate-search indexed from integration tests, as there could be a lock -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${user.home}/${project.build.finalName}/index</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <!-- will package a ready-to-run app regarding hibernate-search index location -->
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <escapeString>\</escapeString>
          <webResources>
            <resource>
              <directory>src/main/resources/packaged</directory>
              <targetPath>WEB-INF/classes</targetPath>
              <filtering>true</filtering>
              <includes>
                <include>hibernate.properties</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native2ascii-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>native2ascii-utf8</id>
            <goals>
              <goal>native2ascii</goal>
            </goals>
            <configuration>
              <encoding>UTF8</encoding>
              <includes>
                <include>ApplicationResources_zh*.properties</include>
                <include>displaytag_zh*.properties</include>
                <include>errors_zh*.properties</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.java</include>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/main/webapp</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </testResource>
    </testResources>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.zzvc.mmps</groupId>
      <artifactId>mmps-scheduler</artifactId>
      <version>${mmps-core.version}</version>
    </dependency>

    <dependency>
      <groupId>com.zzvc.mmps</groupId>
      <artifactId>mmps-db-service</artifactId>
      <version>${mmps-db.version}</version>
    </dependency>

    <dependency>
      <groupId>com.zzvc.mmps</groupId>
      <artifactId>mmps-player-data</artifactId>
      <version>${mmps-player-data.version}</version>
    </dependency>

    <dependency>
      <groupId>org.appfuse</groupId>
      <artifactId>appfuse-web</artifactId>
      <version>${appfuse.version}</version>
      <type>pom</type>
      <!-- This exclusion and the dependency following this one allow DAO framework switching. -->
      <!-- You only need these if you want to use JPA or iBATIS. See APF-565 for more information. -->
      <!-- It does no harm to leave it in for Hibernate, but it's not needed. -->
      <exclusions>
        <exclusion>
          <groupId>org.appfuse</groupId>
          <artifactId>appfuse-hibernate</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>displaytag</groupId>
      <artifactId>displaytag</artifactId>
      <version>${displaytag.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl104-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${jsp.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-core</artifactId>
      <version>${struts.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-convention-plugin</artifactId>
      <version>${struts.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-spring-plugin</artifactId>
      <version>${struts.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons.fileupload.version}</version>
    </dependency>
    <!-- Upgrade the version of commons-io used by fileupload -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
    </dependency>
    <dependency>
      <groupId>com.caucho</groupId>
      <artifactId>hessian</artifactId>
      <version>4.0.7</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>integration-test</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>${cargo.version}</version>
            <configuration>
              <wait>${cargo.wait}</wait>
              <container>
                <containerId>${cargo.container}</containerId>
                <home>${cargo.container.home}</home>
                <zipUrlInstaller>
                  <url>${cargo.container.url}</url>
                  <extractDir>${installDir}</extractDir>
                </zipUrlInstaller>
              </container>
              <configuration>
                <home>${project.build.directory}/${cargo.container}/container</home>
                <properties>
                  <cargo.hostname>${cargo.host}</cargo.hostname>
                  <cargo.servlet.port>${cargo.port}</cargo.servlet.port>
                  <!-- To prevent conflicts with already running instances -->
                  <cargo.tomcat.ajp.port>8123</cargo.tomcat.ajp.port>
                </properties>
              </configuration>
            </configuration>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>webtest-maven-plugin</artifactId>
            <version>1.0.0</version>
            <executions>
              <execution>
                <id>webtest-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
              <execution>
                <id>webtest-verify</id>
                <phase>verify</phase>
                <goals>
                  <goal>verify-result</goal>
                </goals>
              </execution>
              <execution>
                <id>webtest-report-html</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <host>${cargo.host}</host>
              <port>${cargo.port}</port>
              <sourcedirectory>src/test/resources</sourcedirectory>
              <sourcefile>web-tests.xml</sourcefile>
              <target>run-all-tests</target>
              <basepath>${project.build.finalName}</basepath>
              <resultpath>target/webtest/webtest-results</resultpath>
              <haltonfailure>false</haltonfailure>
              <haltonerror>false</haltonerror>
              <loglevel>fatal</loglevel>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- ================= Production Settings Profile ================= -->
    <!-- Use "-P prod" when you want to use the settings in this profile -->
    <!-- =============================================================== -->
    <profile>
      <id>prod</id>
      <build>
        <plugins>
          <!-- Override location of data file for DbUnit to load (doesn't have negative keys) -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>dbunit-maven-plugin</artifactId>
            <configuration>
              <src>src/main/resources/default-data.xml</src>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>webtest-maven-plugin</artifactId>
        <version>1.0.0</version>
      </plugin>
    </plugins>
  </reporting>
</project>
